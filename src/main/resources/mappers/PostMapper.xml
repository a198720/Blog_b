<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doppler.blog.mappers.PostMapper">
    <select id="getRecentPosts" resultType="Post" >
        SELECT
            p.title,
            p.link
        FROM
            post p
        ORDER BY
            p.id DESC
        LIMIT 3
    </select>
    <select id="findAllPostsByStatus" resultType="Post">
        SELECT
            p.title,
            p.link,
            p.created AS createdAt
        FROM
            post p
        WHERE
            p.post_status = #{postStatus}
        ORDER BY p.id DESC
    </select>
    <select id="getPostById" resultType="Post" >
        SELECT
            p.id,
            p.created AS createdAt,
            p.updated AS updatedAt,
            p.title,
            p.link,
            p.content,
            p.rendered_content AS renderedContent,
            p.post_status AS postStatus,
            p.post_format AS postFormat
        FROM
            post p
        WHERE
            p.id = #{postId}
    </select>
    <select id="getByLink" resultMap="postResultMap" >
        SELECT
            *
        FROM
            post p
        WHERE
            p.link = #{postLink}
    </select>
    <resultMap id="postResultMap" type="Post">
        <id property="id" column="id"/>
        <result property="createdAt" column="created"/>
        <result property="updatedAt" column="updated"/>
        <result property="title" column="title"/>
        <result property="link" column="link"/>
        <result property="content" column="content"/>
        <result property="renderedContent" column="rendered_content"/>
        <result property="postStatus" column="post_status"/>
        <result property="postFormat" column="post_format"/>
        <collection property="hashtags" javaType="java.util.HashSet" ofType="Hashtag"
                    select="selectTagsForPost" column="id"/>
    </resultMap>
    <select id="findAllPosts" resultType="Post" >
        SELECT
            p.id,
            p.created AS createdAt,
            p.updated AS updatedAt,
            p.title,
            p.link,
            p.post_status AS postStatus,
            p.post_format AS postFormat
        FROM
            post p
    </select>
    <select id="getPostsByHashtag" resultType="Post" >
        SELECT
            p.title,
            p.link,
            p.created AS createdAt
        FROM
            post p
        WHERE
            id IN (
                SELECT
                    post_id
                FROM
                    posts_tags
                WHERE
                    tag_id = (
                        SELECT
                            id
                        FROM
                            hashtag
                        WHERE
                            `name` = #{tagName}))
    </select>

    <resultMap id="hashtagsResultMap" type="Hashtag">
        <result column="name" property="name"/>
    </resultMap>
    <select id="selectTagsForPost" resultType="Hashtag">
        SELECT
            h.name
        FROM
            hashtag h
        WHERE
            id IN (
                SELECT
                    pt.tag_id
                FROM
                    posts_tags pt
                WHERE
                    pt.post_id = #{id})
    </select>
    <insert id="insertPost" flushCache="true" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
      INSERT INTO post (
        `created`,
        `title`,
        `link`,
        `content`,
        `rendered_content`,
        `post_status`,
        `post_format`
    )
    VALUES
        (
            #{createdAt},
            #{title},
            #{link},
            #{content},
            #{renderedContent},
            #{postStatus},
            #{postFormat})
    </insert>
    <delete id="deletePostById" flushCache="true" >
    DELETE
    FROM
        post
    WHERE
        id = #{postId}
    </delete>
    <update id="updatePost" flushCache="true" parameterType="Post">
        UPDATE post p
        SET
        p.title = #{title},
        p.link = #{link},
        p.content = #{content},
        p.rendered_content = #{renderedContent},
        p.post_status = #{postStatus},
        p.post_format = #{postFormat},
        p.updated = #{updatedAt}
        WHERE p.id = #{id}
    </update>

    <select id="getHashtags" resultType="java.lang.String">
        SELECT
        h.name AS name
        FROM
        hashtag h,
        posts_tags pt
        WHERE
         pt.post_id = #{postId}
        AND
        h.id = pt.tag_id
    </select>
    <update id="deleteTag" parameterType="Long">
        update posts_tags  SET post_id = NULL ,tag_id = NULL  WHERE post_id = #{postId} AND tag_id = #{tagId}
    </update>


</mapper>